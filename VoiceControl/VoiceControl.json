{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/Thunder/master/Tools/JsonGenerator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "VoiceControl API",
        "class": "VoiceControl",
        "description": "The `VoiceControl` plugin manages voice control sessions."
    },
    "definitions": {
        "capabilities": {
            "summary": "A list of capabilities",
            "type": "array",
            "items": {
                "type": "string",
                "example": "PRV"
            }
        },
        "urlPtt": {
            "summary": "The PTT URL",
            "type": "string",
            "example": "vrng://vrex-next-gen-api.vrexcore.net/vrex/speech/websocket"
        },
        "urlHf": {
            "summary": "The HF (ff and mic) URL",
            "type": "string",
            "example": "ws://voiceserver.com/voice/hf"
        },
        "prv": {
            "summary": "The Press & Release Voice feature. `true` for enable, `false` for disable",
            "type": "boolean",
            "example": true
        },
        "wwFeedback": {
            "summary": "The Wake Word Feedback feature (typically an audible beep). `true` for enable, `false` for disable",
            "type": "boolean",
            "example": false
        },
        "status": {
            "summary": "The status of the device",
            "type": "string",
            "example": "ready"
        },
        "enable": {
            "summary": "Enable (`true`) or disable (`false`)",
            "type": "boolean",
            "example": false
        },
        "remoteId": {
            "summary": "The voice device identifier",
            "type": "integer",
            "example": 1
        },
        "sessionId": {
            "summary": "The unique identifier for the voice session, generated by the underlying RDK stack",
            "type": "string",
            "example": "1b11359e-23fe-4f2f-9ba8-cc19b87203cf"
        },
        "result": {
            "type":"object",
            "properties": {
                "success": {
                    "$ref": "#/definitions/success"
                }
            },
            "required": [
                "success"
            ]
        },
        "success": {
            "summary": "Whether the request succeeded",
            "type": "boolean",
            "example": true
        }
    },
    "methods": {
        "configureVoice": {
            "summary": "Configures the RDK's voice stack. NOTE: The URL Scheme determines which VREX API protocol is used. Supported URL schemes include:  \n* http/https - VREX Legacy HTTP API  \n* ws/wss - VREX XR18 WS API  \n* vrng/vrngs - VREX NextGen WS API",
            "params": {
                "type": "object",
                "properties": {
                    "urlAll": {
                        "summary": "Specifies the URL for all devices instead of individually specifying the URL for each device",
                        "type": "string",
                        "example": "ws://voiceserver.com/voice/ptt"
                    },
                    "urlPtt": {
                        "$ref": "#/definitions/urlPtt"
                    },
                    "urlHf": {
                        "$ref": "#/definitions/urlHf"
                    },
                    "enable": {
                        "summary": "Enables or disables all of the voice devices instead of individually enabling or disabling each device",
                        "type": "boolean",
                        "example": true
                    },
                    "prv": {
                        "$ref": "#/definitions/prv"
                    },
                    "wwFeedback": {
                        "$ref": "#/definitions/wwFeedback"
                    },
                    "ptt": {
                        "summary": "The settings for PTT devices",
                        "type": "object",
                        "properties": {
                            "enable": {
                                "$ref": "#/definitions/enable"
                            }
                        }
                    },
                    "ff": {
                        "summary": "The settings for FF devices",
                        "type": "object",
                        "properties": {
                            "enable": {
                                "$ref": "#/definitions/enable"
                            }
                        }
                    },
                    "mic": {
                        "summary": "The settings for MIC devices",
                        "type": "object",
                        "properties": {
                            "enable": {
                                "$ref": "#/definitions/enable"
                            }
                        }
                    }
                },
                "required": [ ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "sendVoiceMessage": {
            "summary": "Sends a message to the Voice Server. The specification of this message is not in the scope of this document. Example use cases for this API call include sending context or sending ASR blobs to the server.",
            "params":{
                "type": "object",
                "properties": {
                    "msgType": {
                        "type": "string",
                        "example": "ars"
                    },
                    "trx": {
                        "type": "string",
                        "example": "1b11359e-23fe-4f2f-9ba8-cc19b87203cf"
                    },
                    "created": {
                        "type": "number",
                        "example": 91890278389232
                    },
                    "msgPayload":{
                        "type": "object",
                        "properties": {

                        }
                    }
                },
                "required": [ ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "setVoiceInit": {
            "summary": "Sets the application metadata in the INIT message that gets sent to the Voice Server. The specification of this blob is not in the scope of this document, but it MUST be a JSON blob",
            "params": {
                "type":"object",
                "properties": {
                    "capabilities": {
                        "$ref": "#/definitions/capabilities"
                    },
                    "language": {
                        "type": "string",
                        "example": "eng-USA"
                    }
                },
                "required": [ ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "voiceSessionByText": {
            "summary": "Sends a voice session with a transcription string to simulate a real voice session for QA. Example use cases for this API call include rack and automation testing.",
            "params":{
                "type": "object",
                "properties": {
                    "transcription": {
                        "summary": "The transcription text to be sent to the voice server",
                        "type": "string",
                        "example": "Watch Comedy Central"
                    },
                    "type": {
                        "summary": "The device type to simulate the voice session from (PTT, FF, MIC)",
                        "type": "string",
                        "example": "PTT"
                    }
                },
                "required": [
                    "transcription"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "voiceStatus": {
            "summary": "Returns the current status of the RDK voice stack. This includes which URLs the stack is currently configured for along with the status for each device type.",
            "result": {
                "type": "object",
                "properties": {
                    "capabilities": {
                        "$ref": "#/definitions/capabilities"
                    },
                    "urlPtt": {
                        "$ref": "#/definitions/urlPtt"
                    },
                    "urlHf": {
                        "$ref": "#/definitions/urlHf"
                    },
                    "prv": {
                        "$ref": "#/definitions/prv"
                    },
                    "wwFeedback": {
                        "$ref": "#/definitions/wwFeedback"
                    },
                    "ptt": {
                        "summary": "The status information for the PTT device type",
                        "type": "object",
                        "properties": {
                            "status": {
                                "$ref": "#/definitions/status"
                            }
                        },
                        "required": [
                            "status"
                        ]
                    },
                    "ff": {
                        "summary": "The status information for the FF device type",
                        "type": "object",
                        "properties": {
                            "status": {
                                "$ref": "#/definitions/status"
                            }
                        },
                        "required": [
                            "status"
                        ]
                    },
                    "mic": {
                        "summary": "The status information for the MIC device type",
                        "type": "object",
                        "properties": {
                            "status": {
                                "$ref": "#/definitions/status"
                            }
                        },
                        "required": [
                            "status"
                        ]
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required":[
                    "capabilities",
                    "urlPtt",
                    "urlHf",
                    "prv",
                    "wwFeedback",
                    "ptt",
                    "ff",
                    "mic",
                    "success"
                ]
            }
        }
    },
    "events": {
        "onKeywordVerification": {
            "summary": "Triggered when a keyword verification result is received",
            "params": {
                "type": "object",
                "properties": {
                    "remoteId": {
                        "$ref": "#/definitions/remoteId"
                    },
                    "sessionId": {
                        "$ref": "#/definitions/sessionId"
                    },
                    "verified": {
                        "summary": "`true` if the keyword was verified, otherwise `false`",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "remoteId",
                    "sessionId",
                    "verified"
                ]
            }
        },
        "onServerMessage": {
            "summary": "Triggered when a message is received from the Voice Server. The `params` value is a contract between the Voice Server and the Application. The definition of this object is outside of the scope of this document.",
            "params": {
                "type": "object",
                "properties": {
                }
            }
        },
        "onSessionBegin": {
            "summary": "Triggered when a voice session begins",
            "params": {
                "type": "object",
                "properties": {
                    "remoteId": {
                        "$ref": "#/definitions/remoteId"
                    },
                    "sessionId": {
                        "$ref": "#/definitions/sessionId"
                    },
                    "deviceType": {
                        "summary": "The type of voice device starting the session",
                        "type": "string",
                        "enum": [
                            "ptt",
                            "ff",
                            "mic"
                        ],
                        "example": "ptt"
                    },
                    "keywordVerification": {
                        "summary": "`true` if the session uses keyword verification, otherwise `false`",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "remoteId",
                    "sessionId",
                    "deviceType",
                    "keywordVerification"
                ]
            }
        },
        "onSessionEnd": {
            "summary": "Triggered when the interaction with the server has concluded",
            "params": {
                "type": "object",
                "properties": {
                    "remoteId": {
                        "$ref": "#/definitions/remoteId"
                    },
                    "sessionId": {
                        "$ref": "#/definitions/sessionId"
                    },
                    "result": {
                        "summary": "The result of the voice session. This also determines which object will be in the parameters (`success`, `error`, `abort`, `shortUtterance`).",
                        "type": "string",
                        "example": "success"
                    },
                    "success": {
                        "summary": "This optional object is included only if the `result` value is `success`",
                        "type": "object",
                        "properties": {
                            "transcription": {
                                "summary": "The transcription provided by the voice server",
                                "type": "string",
                                "example": "Comedy Central"
                            }
                        }
                    },
                    "error": {
                        "summary": "This optional object is included only if the `result` value is `error`",
                        "type": "object",
                        "properties": {
                            "protocolErrorCode": {
                                "summary": "The return code from the protocol used to communicate with the server (HTTP, WSS, and so on)",
                                "type": "integer",
                                "example": 200
                            },
                            "protocolLibraryErrorCode": {
                                "summary": "The return code from the library that was used to connect to the server (CURL, Nopoll, and so on)",
                                "type": "string",
                                "example": 0
                            },
                            "serverErrorCode": {
                                "summary": "The return code from the voice server",
                                "type": "integer",
                                "example": 1
                            },
                            "serverErrorString": {
                                "summary": "The error string from the voice server",
                                "type": "string",
                                "example": "Error"
                            },
                            "internalErrorCode": {
                                "summary": "The return code from the underlying RDK stack",
                                "type": "integer",
                                "example": 0
                            }
                        },
                        "required": [ ]
                    },
                    "abort": {
                        "summary": "This optional object is included only if the `result` value is `abort`",
                        "type": "object",
                        "properties": {
                            "reason": {
                                "summary": "The reason code that identifies why the session was aborted: `0` - Busy, `1` - Server Not Ready, `2` - Audio Format Error, `3` - General Failure, `4` - Voice Disabled, `5` - Device Update, `6` - Missing Authentication Data (that is, No Device ID, SAT, and so on), `7` - New Session, `8` - Controller ID Invalid, `9` - Application Restart",
                                "type": "integer",
                                "enum": [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9
                                ],
                                "example": 1
                            }
                        }
                    },
                    "shortUtterance": {
                        "summary": "This optional object is included only if the `result` value is `abort`",
                        "type": "object",
                        "properties": {
                            "reason": {
                                "summary": "The reason code that identifies why the session was aborted: `0` - End of Stream (Mic Key Released / EOS detected), `1` - First Packet Timeout, `2` - Inter-packet Timeout, `3` - Max Utterance Length, `4` - Adjacent Key Press, `5` - Other Key Press, `6` - Other / Unknown",
                                "type": "integer",
                                "enum": [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6
                                ],
                                "example": 1
                            }
                        }
                    }
                },
                "required": [
                    "remoteId",
                    "sessionId",
                    "reason"
                ]
            }
        },
        "onStreamBegin": {
            "summary": "Triggered when a device starts streaming voice data to the RDK. This event is optional, and will most likely be used for follow up sessions.",
            "params": {
                "type": "object",
                "properties": {
                    "remoteId": {
                        "$ref": "#/definitions/remoteId"
                    },
                    "sessionId": {
                        "$ref": "#/definitions/sessionId"
                    }
                },
                "required": [
                    "remoteId",
                    "sessionId"
                ]
            }
        },
        "onStreamEnd": {
            "summary": "Triggered when the device has stopped streaming audio",
            "params": {
                "type": "object",
                "properties": {
                    "remoteId": {
                        "$ref": "#/definitions/remoteId"
                    },
                    "sessionId": {
                        "$ref": "#/definitions/sessionId"
                    },
                    "reason": {
                        "summary": "The reason code for why the device stopped streaming audio: `0` - End of Stream (Mic Key Released / EOS detected), `1` - First Packet Timeout, `2` - Inter-packet Timeout, `3` - Max Utterance Length, `4` - Adjacent Key Press, `5`- Other Key Press, `6` - Other / Unknown",
                        "type": "integer",
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                        ],
                        "example": 0
                    }
                },
                "required": [
                    "remoteId",
                    "sessionId",
                    "reason"
                ]
            }
        }
    }
}
